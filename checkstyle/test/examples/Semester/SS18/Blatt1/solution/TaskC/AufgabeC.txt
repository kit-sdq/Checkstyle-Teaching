boolean a = true;
boolean b = true;
boolean c = false;
boolean d = !(a || b) & c | (a && !b) ^ !c;
boolean e = !(a && b) && c || !a ^ b;

The evaluation steps will be done one by one below ordered by the precedence of the operators and from left to right.

Disclaimer: For simplicities sake, I replace all variables with their boolean representation. Thats not actually how
it works, the variable lookup happens only when the value is actually needed for the current step.

boolean d = true
---------------------
        !(true || true) & false | (true && !true) ^ !false
(I)     !true & false | (true && !true) ^ !false
(II)    !true & false | (true && false) ^ !false
(III)   !true & false | false ^ !false
(IV)    false & false | false ^ !false
(V)     false & false | false ^ true
(VI)    false | false ^ true
(VII)   false | true
(VIII)  true

boolean e = true
---------------------
        !(true && true) && false || !true ^ true
(I)     !true && false || !true ^ true
(II)    false && false || !true ^ true
(III)   false && false || false ^ true
(IV)    false && false || true
(V)     false || true
(VI)    true