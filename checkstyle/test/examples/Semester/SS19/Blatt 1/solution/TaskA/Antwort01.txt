Ein Objekt wird durch die drei Aspekte Identität (Objektname),
Zustand (Attribute) und Verhalten (Methoden) charakterisiert.

Eine Klasse ist ein vom konkreten Objekt abstrahierter "Bauplan"
für gleiche Objekte und legt fest, welche Attribute und Methoden
die Objekt-Instanzen der Klasse haben.

Der interne Zustand eines unveränderliches Objekts kann nach der
vollständigen Erstellung nicht mehr geändert werden. Ein Beispiel
für ein solches "Immutable Object" wäre in Java ein String.

Das Prinzip der Datenkapselung ist das Verbergen von Daten/Informationen
vor dem Zugriff von außen. Ein Zugriff ist nur über genau festgelegte
Schnittstellen möglich, was Abhängigkeiten reduziert und eine "lose Kopplung"
der Programmkomponenten ermöglicht.

Eine Variable ist ein "Platzhalter" für Werte eines Datentyps.

Ein Datentyp bezeichnet eine Menge "gleichartiger" Werte und definiert damit
die möglichen Werte von Variablen und die auf ihnen ausführbaren Operationen.

Ein Konstruktor dient der Objekterzeugung und Initialisierung der Attribute.

Eine Utility-Klasse besitzt keinen inneren Zustand, wodurch ihre Methoden
statisch sein sollten. Außerdem enthält sie üblicherweise Code, der von verschiedenen
anderen Klassen benötigt wird. Um die Instanziierung einer solchen Klasse zu
verhindern enthält sie einen privaten Konstruktor. Um eine Nutzung der Klasse
als Elternklasse zu verhindern sollte sie "final" deklariert werden.
